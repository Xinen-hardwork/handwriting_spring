@startuml

class BeanFactory{
- beanDefinitionMap: Map<String, BeanDefinition>
+ getBean(String name)
- registerBeanDefinition(String name, BeanDefinition beanDefinition)
}

interface ListableBeanFactory{
+ getBeansOfType(Class<T> type)
+ getBeanDefinitionNames()
}

Interface HierarchicalBeanFactory{}

Interface AutowireCapableBeanFactory{}

Interface ConfigurableBeanFactory{
- SCOPE_SINGLETON: String
- SCOPE_PROTOTYPE: String
}

Interface ConfigurableListableBeanFactory{
+ getBeanDefinition(String beanName)
}

ConfigurableListableBeanFactory --> ConfigurableBeanFactory:继承
ConfigurableListableBeanFactory --> AutowireCapableBeanFactory:继承
ConfigurableListableBeanFactory --> ListableBeanFactory:继承
ConfigurableBeanFactory-->HierarchicalBeanFactory:继承
HierarchicalBeanFactory --> BeanFactory:继承
ListableBeanFactory --> BeanFactory:继承
AutowireCapableBeanFactory --> BeanFactory:继承
@enduml
